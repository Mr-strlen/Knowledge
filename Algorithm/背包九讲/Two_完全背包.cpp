/*
有N种物品和一个容量为V的背包，每种物品都有无限件可用。
第i种物品的费用是w[i]，价值是v[i]。
求解将哪些物品装入背包可使这些物品的费用总和不超过背包容量，且价值总和最大。
状态转移方程：f[i][j]=max(f[i-1][j-k*w[i]]+k*v[i])| 0<=k*w[i]<=j 

转化为01背包问题： 
将单个物品拆成 V/w[i]或者 w[i]*2^k
*/
//O(VN)算法
for (int i = 1; i <= n; i++)
    for (int j = w[i]; j <= V; j++)
        f[j] = max(f[j], f[j - w[i]] + v[i]);
//状态转移方程 f[i][j]=max(f[i-1][j],f[i][j-w[i]]+v[i]) 
